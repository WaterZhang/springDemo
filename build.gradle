plugins {
    id 'org.springframework.boot' version '2.3.3.RELEASE'
    id 'io.spring.dependency-management' version '1.0.6.RELEASE'
    id 'java'
    id 'war'
    id 'maven'
    id 'org.asciidoctor.convert' version '1.5.6'
}

ext {
    name = 'springdemo'
    description = """spring demo"""
    startClass = 'com.zhangzemiao.www.springdemo.Application'
    depotInfo='none'
    buildType='sandbox'
    feignVersion = '11.0'
    hystrixVersion = '1.5.18'
}

configurations.all {
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
}

group 'com.zhangzemiao.www.springdemo'
version '1.0-SNAPSHOT'
sourceCompatibility = '11'

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: "io.spring.dependency-management"
apply plugin: 'idea'
apply plugin: 'org.asciidoctor.convert'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-tomcat'
    //jsp support
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
    //log4j2
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'

    //swagger 3.0
    implementation "io.springfox:springfox-boot-starter:3.0.0"
    implementation "io.springfox:springfox-swagger-ui:3.0.0"

    //open feign
    implementation "io.github.openfeign:feign-core:$feignVersion"
    implementation "io.github.openfeign:feign-jackson:$feignVersion"
    implementation "io.github.openfeign:feign-gson:$feignVersion"
    implementation "io.github.openfeign:feign-hystrix:$feignVersion"
    implementation "com.netflix.hystrix:hystrix-servo-metrics-publisher:$hystrixVersion"
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.12'
    implementation group: 'io.github.openfeign', name: 'feign-okhttp', version: '11.0'
    implementation group: 'commons-configuration', name: 'commons-configuration', version: '1.8'

    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.11'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

asciidoctor {
    sourceDir = file('src/main/docs')
    outputDir "$projectDir/src/main/resources/public"
    backends 'html5'
    attributes 'source-highlighter' : 'prettify'

}

task cleanTempDir(type: Delete) {
    delete fileTree(dir: 'src/main/resources/public')
}

clean {
    dependsOn cleanTempDir
}

build {
    dependsOn asciidoctor
}

bootRun {
    dependsOn asciidoctor
    configure {
        systemProperty "application.environment", "dev"
        systemProperty "spring.profiles.active", "dev"
        systemProperty "application.home", "."
    }

    jvmArgs = [
            "-Dproject.name=${project.name}",
            "-Dapplication.name=${project.name}",
            "-Dapplication.environment=dev",
            "-Dapplication.home=.",
            '-Xdebug',
            '-Xrunjdwp:server=y,transport=dt_socket,address=5005,suspend=n',
            '-XX:-OmitStackTraceInFastThrow'
    ]
}

bootWar {
    manifest {
        attributes(
                "Application-Name": "${project.name}",
                "Application-Version": "${project.version}",
                "Application-Description": "${project.description}",
                "Built-By": System.getProperty("user.name"),
                "Build-Jdk": System.getProperty("java.version"),
                "Build-Time": new Date(),
                "Build": "${buildType}",
                "Branch": "test",
                "Depot": "test",
                "mainClass": "${startClass}")
    }
}
